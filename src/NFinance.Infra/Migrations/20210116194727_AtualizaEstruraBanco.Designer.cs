// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NFinance.Infra;

namespace NFinance.Infra.Migrations
{
    [DbContext(typeof(BaseDadosContext))]
    [Migration("20210116194727_AtualizaEstruraBanco")]
    partial class AtualizaEstruraBanco
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("NFinance.Domain.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RendaMensal")
                        .HasColumnType("FLOAT64(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("NFinance.Domain.Gastos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataDoGasto")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeParcelas")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("FLOAT64(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("NFinance.Domain.Investimentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataAplicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("FLOAT64(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Investimentos");
                });

            modelBuilder.Entity("NFinance.Domain.PainelDeControle", b =>
                {
                    b.Property<int>("IdPainelDeControle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("GastosAnual")
                        .HasColumnType("FLOAT64(18,2)");

                    b.Property<decimal>("GastosMensal")
                        .HasColumnType("FLOAT64(18,2)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoAnual")
                        .HasColumnType("FLOAT64(18,2)");

                    b.Property<decimal>("SaldoMensal")
                        .HasColumnType("FLOAT64(18,2)");

                    b.Property<decimal>("ValorInvestidoAnual")
                        .HasColumnType("FLOAT64(18,2)");

                    b.Property<decimal>("ValorInvestidoMensal")
                        .HasColumnType("FLOAT64(18,2)");

                    b.Property<decimal>("ValorRecebidoAnual")
                        .HasColumnType("FLOAT64(18,2)");

                    b.HasKey("IdPainelDeControle");

                    b.HasIndex("Id");

                    b.ToTable("PainelDeControle");
                });

            modelBuilder.Entity("NFinance.Domain.Resgate", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataResgate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotivoResgate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("FLOAT64(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Resgate");
                });

            modelBuilder.Entity("NFinance.Domain.Cliente", b =>
                {
                    b.HasOne("NFinance.Domain.Gastos", "Gastos")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NFinance.Domain.Investimentos", "Investimentos")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gastos");

                    b.Navigation("Investimentos");
                });

            modelBuilder.Entity("NFinance.Domain.PainelDeControle", b =>
                {
                    b.HasOne("NFinance.Domain.Cliente", "IdCliente")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCliente");
                });

            modelBuilder.Entity("NFinance.Domain.Resgate", b =>
                {
                    b.HasOne("NFinance.Domain.Investimentos", "IdInvestimento")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdInvestimento");
                });
#pragma warning restore 612, 618
        }
    }
}
